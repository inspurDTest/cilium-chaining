name: e2e

env:
  ONLINE_REGISTER: ghcr.io
  HELM_VERSION: v3.13.0

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main

jobs:
  get_ref:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_ref.outputs.tag }}
    steps:
      - name: Get Ref
        id: get_ref
        run: |
          if ${{ github.event_name == 'push' }} ; then
            echo "trigger by push"
            echo ::set-output name=tag::${{ github.sha }}
          elif ${{ github.event_name == 'pull_request' }} ; then
            echo "trigger by pull_request"
            echo ::set-output name=tag::${{ github.event.pull_request.head.sha }}
          else
            echo "unexpected event: ${{ github.event_name }} "
            exit 1
          fi

  call-build-image:
    uses:  ./.github/workflows/call-image-build.yaml
    needs: [get_ref]
    with:
      ref: ${{ github.ref }}
      tag: ${{ needs.get_ref.outputs.tag }}
      push: false
      ci: true
    secrets: inherit

  call_e2e:
    runs-on: ubuntu-latest
    needs: [get_ref,call-build-image]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: "0"
          ref: ${{ github.ref }}

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.2
          id: go

      # The cached helm binary path is prepended to the PATH environment variable as well as stored in the helm-path output variable
      # https://github.com/Azure/setup-helm
      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Download ci image
        uses: actions/download-artifact@v3
        with:
          name: image-e2e-tar
          path: .tmp

      - name: Load Image to docker
        run: |
          docker load -i .tmp/image.tar
          docker images

      # https://github.com/helm/kind-action
      - name: Create Kind cluster
        uses: helm/kind-action@v1.8.0
        with:
          wait: 120s

      - name: Run chart-testing (install)
        run: |
          kind load docker-image ${{ env.ONLINE_REGISTER }}/${{ github.repository }}:${{ needs.get_ref.outputs.tag }} --name chart-testing
          helm upgrade --install cilium-chaining -n kube-system charts/cilium-chaining  \
            --set cilium.image.tag=${{ needs.get_ref.outputs.tag }}
          sleep 20
          kubectl get po -n kube-system -o wide
          kubectl describe po -n kube-system -l app.kubernetes.io/name=cilium-chaining
          kubectl wait --for=condition=ready -l app.kubernetes.io/name=cilium-chaining --timeout=300s pod -n kube-system